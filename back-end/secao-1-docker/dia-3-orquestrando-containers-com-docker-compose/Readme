üöÄ Exerc√≠cio 1:

Vamos aprimorar nossos conhecimentos sobre images e volumes, para isso:

Crie um arquivo HTML chamado missao_trybe.html que tenha a seguinte estrutura:

Tag <title> com o seguinte texto ‚ÄúTrybe‚Äù;

Tag <H1> com o seguinte texto ‚ÄúMiss√£o da Trybe‚Äù;

Tag <p> com o seguinte texto ‚ÄúGerar oportunidade para pessoas‚Äù;

Salve o arquivo em qualquer lugar da sua m√°quina com a extens√£o html

Crie um container para manter um servidor httpd:2.4 Apache e vincule sua porta interna com a porta 4545 da sua m√°quina local.

Ap√≥s criar o container acesse a p√°gina HTML que est√° rodando no servidor em seu browser.

Acesse o arquivo missao_trybe.html e acrescente a tag <p> com o seguinte texto ‚ÄúNosso neg√≥cio √© GENTE! #VQV‚Äù;

Obtenha o id do container httpd:2.4;

Obtenha o Mounts atrav√©s da propriedade Source que deve mostrar o volume desse container no Docker Host;

Agora pare o container httpd:2.4;

Exclua o seu container;

Verifique se a pasta onde voc√™ salvo o arquivo html permanece no mesmo lugar;

Obtenha o IMAGE ID do servidor;

Depois de obter o IMAGE ID, exclua a imagem.

üöÄ Exerc√≠cio 2:

Crie o arquivo Compose para subir um ghost blog, essa plataforma √© similar com o Wordpress e √© utilizada para criar sites de conte√∫do. Voc√™ pode ler no site oficial como criar conte√∫dos nele e utiliz√°-lo. Para esse exerc√≠cio, utilizaremos apenas sua p√°gina de exemplo:

Utilize a vers√£o ‚Äú3‚Äù no arquivo;
Crie um service para subir a plataforma, utilize a imagem ghost:1-alpine;
Publique a porta 2368, fazendo bind tamb√©m para a 2368;
Suba a aplica√ß√£o utilizando o docker-compose e ent√£o acesse a porta publicada para validar se deu tudo certo.
üöÄ Exerc√≠cio 3:

Por padr√£o o ghost utiliza um banco de dados sqlite interno para salvar as informa√ß√µes, por√©m, vamos alterar esse comportamento para exercitar nossos conhecimentos:

Crie um novo servi√ßo db para o nosso banco de dados:

Podemos utilizar o banco de dados MySQL, utilize a imagem mysql:5.7;
Precisamos definir uma senha root para o banco, para isso utilize a vari√°vel de ambiente MYSQL_ROOT_PASSWORD
Agora precisamos configurar nosso servi√ßo ghost para utilizar o banco de dados:

Defina o tipo de banco de dados a ser usado pelo ghost definindo a vari√°vel de ambiente database__client para mysql;
Defina o servi√ßo db como servidor do banco de dados na vari√°vel de ambiente database__connection__host;
Defina as credenciais para a conex√£o com o banco de dados
Para definir a pessoa usu√°ria (root), utilize a vari√°vel de ambiente database__connection__user
Para definir a senha (a mesma que definimos no nosso servi√ßo db), utilize a vari√°vel de ambiente database__connection__password
Defina o nome ghost para o nome do database no banco de dados utilizando a vari√°vel de ambiente database__connection__database;
Utilize a op√ß√£o depends_on para criar rela√ß√µes de depend√™ncias entre os servi√ßos.
Suba o ambiente com o novo arquivo usando o docker-compose e ent√£o acesse a porta.

Exerc√≠cio 4:

Agora vamos praticar os conceitos de volumes e networks.

Configure o nosso servi√ßo mysql para utilizar um volume, conforme vimos no conte√∫do, utilize o caminho target /var/lib/mysql.
Ao inv√©s de utilizar a rede padr√£o criada pelo Compose, defina uma rede chamada my-network para a comunica√ß√£o dos dois servi√ßos.
Suba o ambiente com o novo arquivo usando o docker-compose e ent√£o acesse-o.
Exerc√≠cio 5:

Agora vamos criar um novo arquivo Compose, para rodarmos uma aplica√ß√£o React, conforme vimos alguns exemplos do conte√∫do:

Inicie um novo projeto ReactJS utilizando o create-react-app;
Crie o Dockerfile, conforme vimos na aula passada;
Crie um novo arquivo Compose utilizando a vers√£o 3;
Defina um servi√ßo no arquivo para nosso app, para isso utilize a op√ß√£o build para apontar para o Dockerfile;
Publique a porta exposta no Dockerfile fazendo bind para a porta 8080 do localhost;
Exerc√≠cio 6:

Para simularmos o processo de desenvolvimento, fa√ßa a altera√ß√£o em alguma parte do c√≥digo do app react, e ent√£o execute o comando para subir o servi√ßo novamente, ‚Äúrebuildando‚Äù a imagem para aplicar as altera√ß√µes.