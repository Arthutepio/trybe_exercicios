Exerc√≠cio 1: üöÄ Um zool√≥gico precisa de um banco de dados para armazenar informa√ß√µes sobre os seus animais. As informa√ß√µes a serem armazenadas sobre cada animal s√£o:

Nome;

Esp√©cie;

Sexo;

Idade;

Localiza√ß√£o.

Cada animal tamb√©m possui v√°rios cuidadores, e cada cuidador pode ser respons√°vel por mais de um animal. Al√©m disso, cada cuidador possui um gerente, sendo que cada gerente pode ser respons√°vel por mais de um cuidador.

// Identifica√ß√£o das Entidades:

// Entidade 1: Animal;
// Entidade 2: Cuidador;
// Entidade 3: Gerente;
// Entidade 4: Cuidador e Animal;
// Identifica√ß√£o dos Atributos:

// Animal: animal_id, nome, especie, sexo, idade e localiza√ß√£o;
// Cuidador: cuidador_id, nome, gerente_id;
// Gerente: gerente_id e nome;
// Cuidador e Animal: cuidador_id e animal_id;
// Identificar os Relacionamentos:

// Um animal pode ter um ou mais cuidadores;
// Um cuidador pode cuidar de um ou mais animais;
// Um gerente pode gerenciar uma ou mais cuidadores;
// Um cuidador possui um gerente;

// Solu√ß√£o
// Crie o banco de dados usando os comandos DROP SCHEMA IF EXISTS, CREATE e USE para derrubar um banco de dados de mesmo nome caso ele j√° exista, recria-lo e garantir que este banco de dados seja o banco que receber√° os comandos a seguir.
// Copiar
// DROP SCHEMA IF EXISTS zoologico;
// CREATE SCHEMA zoologico;
// USE zoologico;
// Crie a tabela de animais
// Copiar
// CREATE TABLE animal(
//     animal_id INT PRIMARY KEY AUTO_INCREMENT,
//     nome VARCHAR(50) NOT NULL,
//     especie VARCHAR(50) NOT NULL,
//     sexo VARCHAR(50) NOT NULL,
//     idade INT NOT NULL,
//     localizacao VARCHAR(50) NOT NULL
// );
// Crie a tabela de gerentes
// Copiar
// CREATE TABLE gerente(
//     gerente_id INT PRIMARY KEY AUTO_INCREMENT,
//     nome VARCHAR(50) NOT NULL
// );
// Crie a tabela de cuidador relacionando cada cuidador a seu gerente usando uma chave estrangeira (foreign key)
// Copiar
// CREATE TABLE cuidador(
//     cuidador_id INT PRIMARY KEY AUTO_INCREMENT,
//     nome VARCHAR(50) NOT NULL,
//     gerente_id INT NOT NULL,
//     FOREIGN KEY (gerente_id) REFERENCES gerente (gerente_id)
// );
// Crie a tabela de rela√ß√£o entre os animais e seus cuidadores
// Copiar
// CREATE TABLE animal_cuidador(
//     animal_id INT,
//     cuidador_id INT,
//     CONSTRAINT PRIMARY KEY(animal_id, cuidador_id),
//     FOREIGN KEY (animal_id) REFERENCES animal (animal_id),
//     FOREIGN KEY (cuidador_id) REFERENCES cuidador (cuidador_id)
// );


